package cc.catalysts.gradle.plugins.grails

import org.gradle.api.DefaultTask
import org.gradle.api.IllegalOperationAtExecutionTimeException
import org.gradle.api.InvalidUserDataException
import org.gradle.api.tasks.TaskAction

public class WarTask extends DefaultTask {

    public WarTask() {
        project.afterEvaluate {
            if (project.grails.application == null) {
                throw new InvalidUserDataException("Please specify the main grails application in your build.gradle, e.g. grails { application = project(':demo-web') }")
            }

            dependsOn project.grails.application.tasks.'grails-war'
        }

    }

    @TaskAction
    void rename() {
        def warFile = ~/.+\.war/

        def warDir = new File(project.grails.application.projectDir, 'target')
        def warDestination = project.grails.warFile ?: new File(warDir, 'ROOT.war')

        // delete old renamed WAR
        warDestination.delete()


        def found = 0
        warDir.eachFileMatch(warFile) {
            found++
        }

        if (found == 0) {
            throw new IllegalOperationAtExecutionTimeException("Cant find .war file generated by grails in " + warDir)
        }
        else if (found > 1) {
            throw new IllegalOperationAtExecutionTimeException("Found multiple .war files, please check " + warDir + " and delete all .war files.")
        }
        else {
            // only one .war file in directory, generated by grails
            warDir.eachFileMatch(warFile) {
                it.renameTo(warDestination)
            }
        }
    }
}
